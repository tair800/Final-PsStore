@section Links {
    <link href="~/css/detail.css" rel="stylesheet" />
}

@model GameDetailWithCommentsVM

<!-- Game Banner -->
<div class="game-banner d-flex align-items-end">
    <div class="container">
        <div class="game-info text-white p-4 mb-4">
            <h1 class="fw-bold">@Model.GameDetail.Title</h1>
            <div class="d-flex align-items-center mb-3">
                <span class="badge bg-secondary me-2">@Model.GameDetail.Platform</span>
                <span class="me-2">4.35</span>
                <span class="me-2 rating-star">⭐</span>
                <span>67K ratings</span>
            </div>
            <p class="game-price">$@Model.GameDetail.Price</p>
            <div class="d-flex align-items-center">
                <button class="btn btn-warning text-dark cart-btn">Add to Cart</button>
                <button class="btn btn-link text-white ms-3">
                    <i class="fa fa-heart text-3xl"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add-Ons Section -->
<div class="container py-5">
    <h2 class="text-center mb-5">Add-Ons</h2>
    <div class="d-flex justify-content-center">
        @foreach (var dlc in Model.GameDetail.DlcNames)
        {
            <div class="addon-item text-center me-4">
                <img class="addon-img rounded" src="@dlc.ImgUrl" alt="@dlc.Name" />
                <p class="fs-5 fw-bold mt-2">@dlc.Name</p>
                <h3 class="fs-5 mt-1">$@dlc.Price</h3>
            </div>
        }
    </div>
</div>

<!-- Comments Section -->
<div class="container mt-5">
    <div class="comment-section p-4">
        <h3 class="mb-4">Comments</h3>
        @if (Model.Contents != null && Model.Contents.Any())
        {
            <div class="comments-list">
                @foreach (var comment in Model.Contents)
                {
                    <div class="comment-item p-4 mb-4 rounded" id="comment-@comment.Id">
                        <div class="comment-header d-flex justify-content-between align-items-center mb-2">
                            <span class="comment-user">@comment.UserId</span>
                            <span class="text-github fs-6 ps-3">@comment.CreatedDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="comment-content mb-3" id="content-@comment.Id">
                            <p>@comment.Content</p>
                            <!-- Check if the comment has been modified -->
                            @if (comment.UpdatedDate.HasValue && comment.UpdatedDate.Value != comment.CreatedDate)
                            {
<small class="text-github">Modified @comment.UpdatedDate?.AddHours(-4).ToString("MMM dd, yyyy  HH:mm")</small>
                            }
                        </div>
                        @if (comment.CanDelete)
                        {
                            <div class="comment-actions d-flex">
                                <button class="delete-comment-btn btn btn-danger me-2" onclick="deleteComment(@comment.Id)"><i class="fa-solid fa-trash"></i></button>
                                <button class="edit-comment-btn btn btn-primary" onclick="editComment(@comment.Id)"><i class="fa-solid fa-pen"></i></button>
                            </div>
                        }
                        <div class="edit-comment-form mt-3 d-none" id="edit-form-@comment.Id">
                            <textarea class="form-control mb-2" id="edit-content-@comment.Id">@comment.Content</textarea>
                            <button class="btn btn-success" onclick="saveComment(@comment.Id)">Save</button>
                            <button class="btn btn-secondary" onclick="cancelEdit(@comment.Id)">Cancel</button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No comments available for this game. Be the first to comment!</p>
        }
    </div>
</div>


<!-- Add a New Comment Section -->
@if (ViewBag.IsAuthenticated)
{
    <div class="container add-comment-form mt-5 p-4 rounded">
        <h4 class="mb-4">Add a Comment</h4>
        <form id="addCommentForm">
            <input type="hidden" id="gameId" value="@Model.GameDetail.Id" />
            <div class="form-group mb-3">
                <textarea id="commentContent" class="add-comment-textarea form-control" placeholder="Write your comment here..." required></textarea>
            </div>
            <button type="button" onclick="addComment()" class="add-comment-btn btn btn-success">Add Comment</button>
        </form>
    </div>
}
else
{
    <div class="container add-comment-form mt-4 text-center">
        <p>Please <a href="@Url.Action("Login", "User")">log in</a> to add a comment.</p>
    </div>
}

<script>
    // Add comment
    async function addComment() {
        const gameId = document.getElementById("gameId").value;
        const content = document.getElementById("commentContent").value;

        const response = await fetch('/Game/AddComment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ GameId: gameId, Content: content })
        });

        if (response.ok) {
            window.location.reload();
        } else {
            alert('Failed to add comment');
        }
    }

    // Delete comment
    async function deleteComment(id) {
        if (confirm("Are you sure you want to delete this comment?")) {
            const response = await fetch(`/Game/DeleteComment/${id}`, {
                method: 'DELETE'
            });

            if (response.ok) {
                document.getElementById(`comment-${id}`).remove();
            } else {
                alert('Failed to delete comment');
            }
        }
    }

    // Edit comment
    function editComment(id) {
        document.getElementById(`edit-form-${id}`).classList.remove('d-none');
        document.getElementById(`content-${id}`).style.display = 'none';
    }

    // Cancel editing
    function cancelEdit(id) {
        document.getElementById(`edit-form-${id}`).classList.add('d-none');
        document.getElementById(`content-${id}`).style.display = 'block';
    }

   async function saveComment(id) {
        const content = document.getElementById(`edit-content-${id}`).value;

        const response = await fetch(`/Game/UpdateComment/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ Content: content })
        });

        if (response.ok) {
            window.location.reload();
        } else {
            alert('Failed to save comment');
        }
    }
</script>

