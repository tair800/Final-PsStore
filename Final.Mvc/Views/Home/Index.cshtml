@using Final.Mvc.ViewModels.HomeVMs
@model HomeVM

@section Links {
    <link href="~/css/home.css" rel="stylesheet" />
}

<!-- Promo  -->
@Html.Partial("_PromoPartial", Model.Promos)



<!-- Game  -->

<div class="game-list pb-3">
    <h1 class="pb-2 mb-2">New Games</h1>
    @Html.Partial("_NewGamesPartial", Model.Games)

    <h1 class="pb-2 mb-2">All Games</h1>
    @Html.Partial("_AllGamesPartial", Model.Games)

    <h1 class="pb-2 mb-2">Deals</h1>
    @Html.Partial("_AllDealsPartial", Model.Deals)

</div>



<!-- Category  -->
@Html.Partial("_CategorySlider", Model.Categories)

 


<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

    //promo

    const promoImage = document.getElementById("promoImage");

    const squareImages = document.querySelectorAll(".square-img");

    squareImages.forEach(img => {
        img.addEventListener("click", function () {
            promoImage.src = this.src;
        });
    });


    if (squareImages.length > 0) {
        promoImage.src = squareImages[0].src;
    }


    squareImages.forEach(img => {
        img.addEventListener("click", function () {
            promoImage.src = this.src;
        });
    });



    //basket
    function isUserLoggedIn() {
        const userEmail = getCookie("userEmail");
        const token = getCookie("token");
        return userEmail && token;
    }

    // Function to get cookie by name
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }

    // Load the basket content when the modal is opened
    document.getElementById('basketModal').addEventListener('show.bs.modal', function () {
        const basketContent = document.getElementById('basketContent');
        if (isUserLoggedIn()) {
            // If user is logged in, load the basket content via API call
            fetch('/Basket/GetBasket')
                .then(response => response.text())
                .then(data => {
                    basketContent.innerHTML = data;
                })
                .catch(error => {
                    basketContent.innerHTML = `<div class="alert alert-danger">Failed to load basket. Please try again later.</div>`;
                });
        } else {
            // If user is not logged in, display a message and a login button
            basketContent.innerHTML = `
                            <div class="alert alert-warning text-center">
                                <p>You are not logged in. Please log in to view your basket.</p>
                                <a href="/User/Login" class="btn btn-primary">Go to Login</a>
                            </div>
                        `;
        }
    });

</script>

