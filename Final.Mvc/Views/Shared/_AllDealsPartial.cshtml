@model List<GameListItemVM>

<div id="all-deals-slider" class="autoplay">
    @foreach (var game in Model.Take(14))
    {
        <div class="card" data-url="@Url.Action("Detail", "Game", new { id = game.Id })">
            @if (game.SalePrice.HasValue)
            {
                <div class="discount">-@(Math.Round((1 - (game.SalePrice.Value / game.Price)) * 100))%</div>
            }
            <img src="@game.ImgUrl" alt="@game.Title" class="game-image">

            <div class="ps-label-container">
                @if ((int)game.Platform == 0)
                {
                    <div class="ps4-label">PS4</div>
                }
                else if ((int)game.Platform == 1)
                {
                    <div class="ps5-label">PS5</div>
                }
                else if ((int)game.Platform == 2)
                {
                    <div class="ps4-label">PS4</div>
                    <div class="ps5-label">PS5</div>
                }
            </div>

            <h3>
                <a href="@Url.Action("Detail", "Game", new { id = game.Id })">@game.Title</a>
            </h3>

            <div class="price">
                @if (game.SalePrice.HasValue)
                {
                    <span class="sale-price">$@game.SalePrice.Value</span>
                    <span class="old-price text-decoration-line-through">$@game.Price</span>
                }
                else
                {
                    <span class="regular-price">$@game.Price</span>
                }
            </div>
        </div>
    }

    <div class="card sale-redirect-card redirect-card">
        <a href="@Url.Action("Index", "Game", new { sale = true, sortByPrice = "price_asc" })">
            <img src="~/img/sales.jpg" alt="View All Sales" class="game-image">
            <div class="sale-banner-text">
                <h3>View All Deals</h3>
            </div>
        </a>
    </div>
</div>

    <script>
        $(document).ready(function () {
            const $slider = $('#all-deals-slider'); // Target only the all-deals-slider

            const totalSlides = $slider.find('.card').not('.redirect-card').length; // Exclude the redirect card

            $slider.slick({
                slidesToShow: 4,
                slidesToScroll: 1,
                autoplay: false,
                infinite: false,
                arrows: true,
                responsive: [
                    { breakpoint: 1200, settings: { slidesToShow: 4 } },
                    { breakpoint: 992, settings: { slidesToShow: 3 } },
                    { breakpoint: 768, settings: { slidesToShow: 2 } },
                    { breakpoint: 576, settings: { slidesToShow: 1 } }
                ]
            });

        function updateNavigation() {
            const currentSlide = $slider.slick('slickCurrentSlide');
            const remainingSlides = totalSlides - 6


            if (currentSlide >= remainingSlides) {
                // Disable only the "next" button when the slider reaches the last visible slide
                $slider.slick('slickSetOption', 'arrows', true, true); // Ensure arrows are enabled
                $slider.find('.slick-next').addClass('slick-disabled'); // Disable next button visually
                $slider.find('.slick-prev').removeClass('slick-disabled'); // Ensure prev button is enabled
            } else {
                // Enable both buttons when not at the end
                $slider.slick('slickSetOption', 'arrows', true, true); // Keep arrows enabled
                $slider.find('.slick-next').removeClass('slick-disabled'); // Enable next button
                $slider.find('.slick-prev').removeClass('slick-disabled'); // Ensure prev button is enabled
            }
        }


        $slider.on('afterChange', function (event, slick, currentSlide) {
            updateNavigation();
        });

        updateNavigation();
    });
    </script>
