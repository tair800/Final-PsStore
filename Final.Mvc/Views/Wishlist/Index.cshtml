@model UserWishlistVM

@section Links {
    <link href="~/css/wishlist.css" rel="stylesheet" />
}

<div class="wishlist-container">
    <h1>Your Wishlist</h1>

    @if (Model.WishlistGames == null)
    {
        <div class="empty-wishlist-message">
            <p>Your wishlist is empty.</p>
            <a href="/Game/Index" class="btn btn-primary">Continue Choosing Games</a>
        </div>
    }
    else
    {
        @foreach (var item in Model.WishlistGames)
        {
            <div class="wishlist-item" id="wishlist-item-@item.GameId">
                <div class="wishlist-item-details">
                    <img src="https://localhost:7047/uploads/images/@item.GameImgUrl" style="     width: 140px" alt="@item.GameTitle" class="game-img" />
                    <h4>@item.GameTitle</h4>
                    <p>Price: $@(item.Price > 0 ? item.Price.ToString("F2") : "N/A")</p>
                    <a href="/Game/Detail/@item.GameId" class="game-detail-link">View Details</a>
                </div>
                <button class="remove-from-wishlist-btn" data-game-id="@item.GameId">Remove</button>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.remove-from-wishlist-btn').on("click", function () {
                const token = getJwtTokenFromCookie();
                if (!token) {
                    alert("Please log in to remove games from the wishlist.");
                    return;
                }

                const gameId = $(this).attr("data-game-id");

                $.ajax({
                    url: `/Wishlist/RemoveFromWishlist`,
                    type: 'POST',
                    data: { gameId: gameId },
                    success: function (response) {
                        if (response.success) {
                            $(`#wishlist-item-${gameId}`).remove();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error:', xhr.responseText || error);
                        alert('Failed to remove game from wishlist.');
                    }
                });
            });
        });

        function getJwtTokenFromCookie() {
            const cookieString = document.cookie;
            const cookies = cookieString.split('; ');
            const tokenCookie = cookies.find(row => row.startsWith('token='));
            return tokenCookie ? tokenCookie.split('=')[1] : null;
        }
    </script>
}
